//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibertyApp.Language {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LibertyApp.Language.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на We are for freedom of speech and against any kind of censorship. We are making a non-commercial VPN that does not collect any data..
        /// </summary>
        public static string AboutDescription {
            get {
                return ResourceManager.GetString("AboutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Free VPN 
        ///for free humans.
        /// </summary>
        public static string AboutHeader {
            get {
                return ResourceManager.GetString("AboutHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About.
        /// </summary>
        public static string AboutMenu {
            get {
                return ResourceManager.GetString("AboutMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Today, freedom of speech is especially vulnerable. Independent media are banned, people are brainwashed with propaganda, VPN services are blocked, and it is dangerous to express one&apos;s position and opinion. This is the reason why we took on this project. It is non-commercial, no profit is pursued either. We are rather small, but yet, we have a great potential..
        /// </summary>
        public static string AboutText {
            get {
                return ResourceManager.GetString("AboutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на App minimized into tray.
        /// </summary>
        public static string AppInTrayNotify {
            get {
                return ResourceManager.GetString("AppInTrayNotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The application will be closed..
        /// </summary>
        public static string ApplicationWillBeClosed {
            get {
                return ResourceManager.GetString("ApplicationWillBeClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FuckRKN1.
        /// </summary>
        public static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect at launch.
        /// </summary>
        public static string ConnectAtLaunch {
            get {
                return ResourceManager.GetString("ConnectAtLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connecting….
        /// </summary>
        public static string ConnectingText {
            get {
                return ResourceManager.GetString("ConnectingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection error.
        /// </summary>
        public static string ConnectionErrorCaption {
            get {
                return ResourceManager.GetString("ConnectionErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VPN.
        /// </summary>
        public static string ConnectionHeader {
            get {
                return ResourceManager.GetString("ConnectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection.
        /// </summary>
        public static string ConnectionMenu {
            get {
                return ResourceManager.GetString("ConnectionMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect.
        /// </summary>
        public static string ConnectText {
            get {
                return ResourceManager.GetString("ConnectText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clipboard.
        /// </summary>
        public static string CopyToClipboardCaption {
            get {
                return ResourceManager.GetString("CopyToClipboardCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} credits copied to clipboard:
        ///{1}.
        /// </summary>
        public static string CopyToClipboardMessage {
            get {
                return ResourceManager.GetString("CopyToClipboardMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy to clipboard.
        /// </summary>
        public static string CopyToClipboardToolTip {
            get {
                return ResourceManager.GetString("CopyToClipboardToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnecting….
        /// </summary>
        public static string DisconnectingText {
            get {
                return ResourceManager.GetString("DisconnectingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnect.
        /// </summary>
        public static string DisconnectText {
            get {
                return ResourceManager.GetString("DisconnectText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на We are OpenSource. You can support us.
        /// </summary>
        public static string DonateHeader {
            get {
                return ResourceManager.GetString("DonateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Support us.
        /// </summary>
        public static string DonateMenu {
            get {
                return ResourceManager.GetString("DonateMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can support us with donations or any other contribution to improve the service. Pulling requests and creating issues also helps us a lot..
        /// </summary>
        public static string DonateText {
            get {
                return ResourceManager.GetString("DonateText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download.
        /// </summary>
        public static string Download {
            get {
                return ResourceManager.GetString("Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File with encryption keys not found..
        /// </summary>
        public static string EncryptionKeysFileNotFound {
            get {
                return ResourceManager.GetString("EncryptionKeysFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import Ecryption Keys Error.
        /// </summary>
        public static string ErrorImportEcryptionKeys {
            get {
                return ResourceManager.GetString("ErrorImportEcryptionKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exit.
        /// </summary>
        public static string Exit {
            get {
                return ResourceManager.GetString("Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exit the application.
        /// </summary>
        public static string ExitApplicationCaption {
            get {
                return ResourceManager.GetString("ExitApplicationCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exiting the application will close the connection. Do you want to close connection and exit?.
        /// </summary>
        public static string ExitApplicationMessage {
            get {
                return ResourceManager.GetString("ExitApplicationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Help.
        /// </summary>
        public static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Instructions on GitHub.
        /// </summary>
        public static string Instructions {
            get {
                return ResourceManager.GetString("Instructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect to VPN on the application launch?.
        /// </summary>
        public static string LaunchConnectExplicit {
            get {
                return ResourceManager.GetString("LaunchConnectExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The application will connect to the VPN on launch.
        /// </summary>
        public static string LaunchConnectMessage {
            get {
                return ResourceManager.GetString("LaunchConnectMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The application will minimize into tray on launch.
        /// </summary>
        public static string LaunchHiddenMessage {
            get {
                return ResourceManager.GetString("LaunchHiddenMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Launch with Windows.
        /// </summary>
        public static string LaunchWithWindows {
            get {
                return ResourceManager.GetString("LaunchWithWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Run application on Windows startup?.
        /// </summary>
        public static string LaunchWithWindowsExplicit {
            get {
                return ResourceManager.GetString("LaunchWithWindowsExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The application will start with Windows.
        /// </summary>
        public static string LaunchWithWindowsMessage {
            get {
                return ResourceManager.GetString("LaunchWithWindowsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mbps.
        /// </summary>
        public static string Mbps {
            get {
                return ResourceManager.GetString("Mbps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Need for encryption keys.
        /// </summary>
        public static string NeedForEncryptionKeys {
            get {
                return ResourceManager.GetString("NeedForEncryptionKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The application needs to install encryption keys on the first launch. Encryption keys are required to establish a connection with the VPN server.
        ///
        ///Do you agree to install encryption keys in your system&apos;s storage?
        ///
        ///If you click «No», the application will be closed..
        /// </summary>
        public static string NeedForEncryptionKeysMessage {
            get {
                return ResourceManager.GetString("NeedForEncryptionKeysMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open in browser.
        /// </summary>
        public static string OpenInBrowserTooltip {
            get {
                return ResourceManager.GetString("OpenInBrowserTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Run minimized into tray.
        /// </summary>
        public static string RunMinimizedIntoTray {
            get {
                return ResourceManager.GetString("RunMinimizedIntoTray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show/hide.
        /// </summary>
        public static string ShowHide {
            get {
                return ResourceManager.GetString("ShowHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connected to Freedom.
        /// </summary>
        public static string StatusConnected {
            get {
                return ResourceManager.GetString("StatusConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connecting to Freedom.
        /// </summary>
        public static string StatusConnecting {
            get {
                return ResourceManager.GetString("StatusConnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnected.
        /// </summary>
        public static string StatusDisconnected {
            get {
                return ResourceManager.GetString("StatusDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Upload.
        /// </summary>
        public static string Upload {
            get {
                return ResourceManager.GetString("Upload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Version.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
    }
}
